		Хэш таблица (Hash Table)
	Хэширование (Hashing) - метод, которой используется для однозначной идентификации определённогообъекта из группы похожих объектов.

	Примеры:
- Студентам университета присваивается уникальный идентификатор, который используется для хранения и получения информации о них.
- Библиотека присваивает каждой книге уникальный номер, который используется для определения её положения на полке.
	
	Хэш-Функция - любая функция, которая сопоставляет набор данных произвольного размера с набором данных фиксированного размера, который попадает в хэш-таблицу.
Хэш-значения, хэш-коды, хэш-суммы или хэши - значения, возвращаемые хэш-функциями.
Хэщ-Функция должна иметь возможность получать уникальный хэш для каждого элемента в наборе данных, чтобы предотвратить несостыковки.
	
	Пример простейшей хэш-функции:
Дано 4 книги: "Harry Potter"; "War and Peace", "Twilight", "Jane Eyre".
У нас есть 13 позиций на полке и нам нужно присвоить каждой книге уникальный номер, которыйможно использовать для распознавания точной позиции.
Хэш-функция берёт буквы названия книги и суммирует их буквы по параметру их расположения в алфавите (a = 1, b = 2 ... z = 26) и делит с остатком на 13, чтобы получить уникальное значение для позиции.
	Получаем:
Harry Potter (8+1+...+18)%13= 8
War and Peace (23+1+...+5)%13= 0
Twilight (20+23+...+20)%13= 4
Jane Eyre (10+1+...+5)%13= 5

! Это был пример простейшей хэш-функции. В реальных программах используются сложные алгоритмы для предотвращения коллизий. Также хэщ может быть любого типа данных, а не только целочисленным.

	
	Хэш таблица (Hash Table) - структура данных, которая отображает ключи в значения.
Хэш-таблица - структура данных, которая используется для хранения хешей и связанным с ними данных.
	Из примера с книгами:
		INDEX
		  0		War and Peace
		  1
		  2
		  3
		  4		Twilight
		  5		Jane Eyre
		  6
		  7
		  8		Harry Potter
		  ..
Таким образом чтобы не искать книгу во всей коллекции, нужно всего лишь ввести название и мы получим точную позицию книгу.

	Преимущества:
- Каждому элементу присвоен свой уникальный ключ.
- Ключ можно использовать для непосредственного поиска нужного элемента.
	Недостатки:
- Хэш-таблицы не запоминают порядок в котором элементы были вставлены.
- Не эффективны в упорядочиванию и сортировке данных.

! Хэш-таблицы обычно используются для реализации ассоциативных массивов.
Используются также при индексировании базы данных, реализациях кеширования и тд.